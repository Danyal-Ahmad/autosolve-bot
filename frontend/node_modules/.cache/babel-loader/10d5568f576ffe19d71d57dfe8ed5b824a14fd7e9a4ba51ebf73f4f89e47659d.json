{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\786\\\\OneDrive\\\\Desktop\\\\autosolve-ai\\\\frontend\\\\src\\\\components\\\\AutoSolveAIUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CheckCircle } from 'lucide-react';\nimport './AutoSolveAIUI.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoSolveAIUI = () => {\n  _s();\n  const [problem, setProblem] = useState('');\n  const [solution, setSolution] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [history, setHistory] = useState([]);\n  const handleSolve = async () => {\n    if (!problem.trim()) {\n      setError('Please enter a problem description.');\n      return;\n    }\n    setLoading(true);\n    setSolution(null);\n    setError(null);\n    try {\n      const response = await fetch('/solve', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          description: problem\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      setSolution(result);\n      setHistory(prev => [...prev, {\n        problem,\n        solution: result\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      setError('An error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Word limit check (150 words)\n  const handleProblemChange = e => {\n    const inputText = e.target.value;\n    const words = inputText.split(/\\s+/).filter(Boolean);\n    if (words.length <= 150) {\n      setProblem(inputText);\n      setError(null);\n    } else {\n      setError('Problem description cannot exceed 150 words.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"AutoSolve AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"background-text\",\n        children: \"AutoSolve AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"background-text\",\n        children: \"AutoSolve AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"label\",\n          children: \"Problem Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input\",\n          value: problem,\n          onChange: handleProblemChange,\n          placeholder: \"Describe your problem (max 150 words)\",\n          \"aria-label\": \"Problem description\" // Accessibility improvement\n          ,\n          rows: 5 // Control the height of the textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSolve,\n        className: \"button\",\n        disabled: loading,\n        children: loading ? 'Solving...' : 'Solve Problem'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `solution ${solution ? 'fade-in' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"solution-title\",\n          children: \"Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"solution-text\",\n          children: solution.solution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"history-title\",\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"history-list\",\n          children: history.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"history-item\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"history-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Problem:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), \" \", item.problem, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Solution:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), \" \", item.solution.solution]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoSolveAIUI, \"pUBGEw9xudfrz3LhbfRiBD8Krac=\");\n_c = AutoSolveAIUI;\nexport default AutoSolveAIUI;\nvar _c;\n$RefreshReg$(_c, \"AutoSolveAIUI\");","map":{"version":3,"names":["React","useState","CheckCircle","jsxDEV","_jsxDEV","AutoSolveAIUI","_s","problem","setProblem","solution","setSolution","loading","setLoading","error","setError","history","setHistory","handleSolve","trim","response","fetch","method","headers","body","JSON","stringify","description","ok","Error","result","json","prev","console","handleProblemChange","e","inputText","target","value","words","split","filter","Boolean","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","onChange","placeholder","rows","onClick","disabled","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/786/OneDrive/Desktop/autosolve-ai/frontend/src/components/AutoSolveAIUI.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { CheckCircle } from 'lucide-react';\r\nimport './AutoSolveAIUI.css';\r\n\r\nconst AutoSolveAIUI = () => {\r\n  const [problem, setProblem] = useState('');\r\n  const [solution, setSolution] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const handleSolve = async () => {\r\n    if (!problem.trim()) {\r\n      setError('Please enter a problem description.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setSolution(null);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/solve', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ description: problem }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const result = await response.json();\r\n      setSolution(result);\r\n      setHistory((prev) => [...prev, { problem, solution: result }]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('An error occurred. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Word limit check (150 words)\r\n  const handleProblemChange = (e) => {\r\n    const inputText = e.target.value;\r\n    const words = inputText.split(/\\s+/).filter(Boolean);\r\n    if (words.length <= 150) {\r\n      setProblem(inputText);\r\n      setError(null);\r\n    } else {\r\n      setError('Problem description cannot exceed 150 words.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\">\r\n        <h1 className=\"title\">AutoSolve AI</h1>\r\n        <div class=\"background-text\">AutoSolve AI</div> <br></br>\r\n        <div class=\"background-text\">AutoSolve AI</div>\r\n        \r\n        \r\n\r\n        <div className=\"input-group\">\r\n          <h2 className=\"label\">Problem Description</h2>\r\n          <textarea\r\n            className=\"input\"\r\n            value={problem}\r\n            onChange={handleProblemChange}\r\n            placeholder=\"Describe your problem (max 150 words)\"\r\n            aria-label=\"Problem description\" // Accessibility improvement\r\n            rows={5} // Control the height of the textarea\r\n          />\r\n          {error && <p className=\"error-text\">{error}</p>}\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleSolve}\r\n          className=\"button\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Solving...' : 'Solve Problem'}\r\n        </button>\r\n\r\n        {solution && (\r\n          <div className={`solution ${solution ? 'fade-in' : ''}`}>\r\n            <h2 className=\"solution-title\">Solution</h2>\r\n            <p className=\"solution-text\">{solution.solution}</p>\r\n          </div>\r\n        )}\r\n\r\n        {history.length > 0 && (\r\n          <div className=\"history\">\r\n            <h2 className=\"history-title\">History</h2>\r\n            <ul className=\"history-list\">\r\n              {history.map((item, index) => (\r\n                <li key={index} className=\"history-item\">\r\n                  <CheckCircle className=\"history-icon\" />\r\n                  <strong>Problem:</strong> {item.problem}\r\n                  <br />\r\n                  <strong>Solution:</strong> {item.solution.solution}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoSolveAIUI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}