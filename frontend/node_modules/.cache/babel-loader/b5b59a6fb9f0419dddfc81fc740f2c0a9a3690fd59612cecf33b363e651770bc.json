{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\786\\\\OneDrive\\\\Desktop\\\\autosolve-ai\\\\frontend\\\\src\\\\components\\\\AutoSolveAIUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Camera } from 'lucide-react';\nimport './AutoSolveAIUI.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AutoSolveAIUI = () => {\n  _s();\n  const [problem, setProblem] = useState('');\n  const [solution, setSolution] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [history, setHistory] = useState([]);\n  const [theme, setTheme] = useState('light');\n  const handleSolve = async () => {\n    if (!problem.trim()) {\n      setError('Please enter a problem description.');\n      return;\n    }\n    setLoading(true);\n    setSolution(null); // Reset solution before fetching\n    setError(null); // Reset error before fetching\n\n    try {\n      const response = await fetch('/solve', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          description: problem\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      setSolution(result);\n      // Save to history\n      setHistory(prev => [...prev, {\n        problem,\n        solution: result\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      setError('An error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleThemeToggle = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container ${theme}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: [\"AutoSolve AI\", /*#__PURE__*/_jsxDEV(Camera, {\n          className: \"icon\",\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleThemeToggle,\n          children: [\"Switch to \", theme === 'light' ? 'Dark' : 'Light', \" Mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Problem Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          value: problem,\n          onChange: e => {\n            setProblem(e.target.value);\n            setError(null); // Clear error on input change\n          },\n          placeholder: \"What problem do you need help with?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSolve,\n        className: `button ${loading ? 'loading' : ''}`,\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), \" Solving...\"]\n        }, void 0, true) : 'Solve Problem'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solution\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"solution-title\",\n          children: \"Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"solution-text\",\n          children: solution.solution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"confidence-text\",\n          children: [\"Confidence: \", solution.confidence]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"history-title\",\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"history-list\",\n          children: history.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"history-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Problem:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), \" \", item.problem, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Solution:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), \" \", item.solution.solution]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoSolveAIUI, \"gW5XSxjXreMAzw2K1nO1SMKZqRg=\");\n_c = AutoSolveAIUI;\nexport default AutoSolveAIUI;\nvar _c;\n$RefreshReg$(_c, \"AutoSolveAIUI\");","map":{"version":3,"names":["React","useState","Camera","jsxDEV","_jsxDEV","Fragment","_Fragment","AutoSolveAIUI","_s","problem","setProblem","solution","setSolution","loading","setLoading","error","setError","history","setHistory","theme","setTheme","handleSolve","trim","response","fetch","method","headers","body","JSON","stringify","description","ok","Error","result","json","prev","console","handleThemeToggle","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","disabled","confidence","length","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/786/OneDrive/Desktop/autosolve-ai/frontend/src/components/AutoSolveAIUI.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Camera } from 'lucide-react';\r\nimport './AutoSolveAIUI.css'; \r\nconst AutoSolveAIUI = () => {\r\n  const [problem, setProblem] = useState('');\r\n  const [solution, setSolution] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n  const [theme, setTheme] = useState('light'); \r\n\r\n  const handleSolve = async () => {\r\n    if (!problem.trim()) {\r\n      setError('Please enter a problem description.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setSolution(null); // Reset solution before fetching\r\n    setError(null); // Reset error before fetching\r\n\r\n    try {\r\n      const response = await fetch('/solve', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ description: problem }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const result = await response.json();\r\n      setSolution(result);\r\n      // Save to history\r\n      setHistory((prev) => [...prev, { problem, solution: result }]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('An error occurred. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleThemeToggle = () => {\r\n    setTheme((prev) => (prev === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <div className={`container ${theme}`}>\r\n      <div className=\"card\">\r\n        <h1 className=\"title\">\r\n          AutoSolve AI\r\n          <Camera className=\"icon\" size={32} />\r\n        </h1>\r\n        \r\n        <div className=\"theme-toggle\">\r\n          <button onClick={handleThemeToggle}>\r\n            Switch to {theme === 'light' ? 'Dark' : 'Light'} Mode\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label className=\"label\">Problem Description</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            value={problem}\r\n            onChange={(e) => {\r\n              setProblem(e.target.value);\r\n              setError(null); // Clear error on input change\r\n            }}\r\n            placeholder=\"What problem do you need help with?\"\r\n          />\r\n          {error && <p className=\"error-text\">{error}</p>}\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleSolve}\r\n          className={`button ${loading ? 'loading' : ''}`}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <span className=\"spinner\"></span> Solving...\r\n            </>\r\n          ) : (\r\n            'Solve Problem'\r\n          )}\r\n        </button>\r\n\r\n        {solution && (\r\n          <div className=\"solution\">\r\n            <h2 className=\"solution-title\">Solution</h2>\r\n            <p className=\"solution-text\">{solution.solution}</p>\r\n            <p className=\"confidence-text\">Confidence: {solution.confidence}</p>\r\n          </div>\r\n        )}\r\n\r\n        {history.length > 0 && (\r\n          <div className=\"history\">\r\n            <h2 className=\"history-title\">History</h2>\r\n            <ul className=\"history-list\">\r\n              {history.map((item, index) => (\r\n                <li key={index} className=\"history-item\">\r\n                  <strong>Problem:</strong> {item.problem}\r\n                  <br />\r\n                  <strong>Solution:</strong> {item.solution.solution}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoSolveAIUI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}